{"ast":null,"code":"import _toConsumableArray from \"/Users/james/Documents/coding/awesome-todolist/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _objectSpread from \"/Users/james/Documents/coding/awesome-todolist/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _slicedToArray from \"/Users/james/Documents/coding/awesome-todolist/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/james/Documents/coding/awesome-todolist/src/App.js\";\nimport React, { createRef, useState, useEffect } from 'react';\nimport './style.scss';\n\nvar App = function App() {\n  var _useState = useState({\n    value: '',\n    list: []\n  }),\n      _useState2 = _slicedToArray(_useState, 2),\n      state = _useState2[0],\n      setState = _useState2[1];\n\n  var input = createRef();\n\n  var onChange = function onChange(e) {\n    return setState(_objectSpread({}, state, {\n      value: e.target.value\n    }));\n  };\n\n  var submit = function submit(e) {\n    e.preventDefault();\n    setState({\n      value: '',\n      list: [{\n        todo: state.value,\n        check: false\n      }].concat(_toConsumableArray(state.list))\n    });\n  };\n\n  var check = function check(idx) {// const newArr = [...state.list]\n    // setState({\n    //   ...state,\n    //   list[idx]: [\n    //     ...state.list,\n    //     this\n    //   ]\n    // }) \n  };\n\n  useEffect(function () {\n    input.current.focus();\n  }, []);\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"inputWrap\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, React.createElement(\"form\", {\n    onSubmit: submit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    type: \"text\",\n    className: \"input\",\n    onChange: onChange,\n    value: state.value,\n    ref: input,\n    placeholder: \"What needs to be done?\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }), React.createElement(\"button\", {\n    type: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, \"submit\")), React.createElement(\"ul\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, state.list.map(function (ele, idx) {\n    return React.createElement(\"li\", {\n      key: idx,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"check\",\n      onClick: function onClick() {\n        return check(idx);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }), ele.todo);\n  }), React.createElement(\"li\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }, state.list.length, \" items left\", React.createElement(\"button\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }, \"All\"), React.createElement(\"button\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }, \"Active\"), React.createElement(\"button\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }, \"Complete\")))));\n};\n\nexport default App;","map":{"version":3,"sources":["/Users/james/Documents/coding/awesome-todolist/src/App.js"],"names":["React","createRef","useState","useEffect","App","value","list","state","setState","input","onChange","e","target","submit","preventDefault","todo","check","idx","current","focus","map","ele","length"],"mappings":";;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,EAAqCC,SAArC,QAAsD,OAAtD;AACA,OAAO,cAAP;;AAEA,IAAMC,GAAG,GAAG,SAANA,GAAM,GAAM;AAAA,kBACUF,QAAQ,CAAC;AACjCG,IAAAA,KAAK,EAAE,EAD0B;AAEjCC,IAAAA,IAAI,EAAE;AAF2B,GAAD,CADlB;AAAA;AAAA,MACTC,KADS;AAAA,MACFC,QADE;;AAKhB,MAAMC,KAAK,GAAGR,SAAS,EAAvB;;AACA,MAAMS,QAAQ,GAAG,SAAXA,QAAW,CAAAC,CAAC;AAAA,WAAIH,QAAQ,mBAAMD,KAAN;AAAaF,MAAAA,KAAK,EAAEM,CAAC,CAACC,MAAF,CAASP;AAA7B,OAAZ;AAAA,GAAlB;;AACA,MAAMQ,MAAM,GAAG,SAATA,MAAS,CAAAF,CAAC,EAAI;AAClBA,IAAAA,CAAC,CAACG,cAAF;AACAN,IAAAA,QAAQ,CAAC;AACPH,MAAAA,KAAK,EAAE,EADA;AAEPC,MAAAA,IAAI,GACF;AACES,QAAAA,IAAI,EAAER,KAAK,CAACF,KADd;AAEEW,QAAAA,KAAK,EAAE;AAFT,OADE,4BAKCT,KAAK,CAACD,IALP;AAFG,KAAD,CAAR;AAUD,GAZD;;AAaA,MAAMU,KAAK,GAAG,SAARA,KAAQ,CAACC,GAAD,EAAS,CACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACD,GATD;;AAUAd,EAAAA,SAAS,CAAC,YAAM;AACdM,IAAAA,KAAK,CAACS,OAAN,CAAcC,KAAd;AACD,GAFQ,EAEN,EAFM,CAAT;AAGA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAM,IAAA,QAAQ,EAAEN,MAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AACE,IAAA,IAAI,EAAC,MADP;AAEE,IAAA,SAAS,EAAC,OAFZ;AAGE,IAAA,QAAQ,EAAEH,QAHZ;AAIE,IAAA,KAAK,EAAEH,KAAK,CAACF,KAJf;AAKE,IAAA,GAAG,EAAEI,KALP;AAME,IAAA,WAAW,EAAC,wBANd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EASE;AAAQ,IAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cATF,CADF,EAYE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGF,KAAK,CAACD,IAAN,CAAWc,GAAX,CAAe,UAACC,GAAD,EAAMJ,GAAN,EAAc;AAC5B,WACE;AAAI,MAAA,GAAG,EAAEA,GAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,SAAS,EAAC,OAAf;AAAuB,MAAA,OAAO,EAAE;AAAA,eAAMD,KAAK,CAACC,GAAD,CAAX;AAAA,OAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAEGI,GAAG,CAACN,IAFP,CADF;AAMD,GAPA,CADH,EASE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGR,KAAK,CAACD,IAAN,CAAWgB,MADd,iBAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAFF,EAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAHF,EAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAJF,CATF,CAZF,CADF,CADF;AAiCD,CAlED;;AAoEA,eAAelB,GAAf","sourcesContent":["import React, { createRef, useState, useEffect } from 'react';\nimport './style.scss';\n\nconst App = () => {\n  const [state, setState] = useState({\n    value: '',\n    list: []\n  })\n  const input = createRef()\n  const onChange = e => setState({ ...state, value: e.target.value })\n  const submit = e => {\n    e.preventDefault()\n    setState({\n      value: '',\n      list: [\n        {\n          todo: state.value,\n          check: false\n        },\n        ...state.list\n      ]\n    })\n  }\n  const check = (idx) => {\n    // const newArr = [...state.list]\n    // setState({\n    //   ...state,\n    //   list[idx]: [\n    //     ...state.list,\n    //     this\n    //   ]\n    // }) \n  }\n  useEffect(() => {\n    input.current.focus()\n  }, [])\n  return (\n    <div>\n      <div className=\"inputWrap\">\n        <form onSubmit={submit}>\n          <input\n            type=\"text\"\n            className=\"input\"\n            onChange={onChange}\n            value={state.value}\n            ref={input}\n            placeholder=\"What needs to be done?\"\n          />\n          <button type=\"submit\">submit</button>\n        </form>\n        <ul>\n          {state.list.map((ele, idx) => {\n            return (\n              <li key={idx}>\n                <div className=\"check\" onClick={() => check(idx)}></div>\n                {ele.todo}\n              </li>\n            )\n          })}\n          <li>\n            {state.list.length} items left\n            <button>All</button>\n            <button>Active</button>\n            <button>Complete</button>\n          </li>\n        </ul>\n      </div>\n    </div>\n  );\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}